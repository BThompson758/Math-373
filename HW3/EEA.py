def EAA(a,b):
    #Accounts for A or B being 0
    if(a == 0):
        return (b, 0, 1)
    elif(b == 0):
        return (a, 1, 0)
    #Recursively calls EEA & assigns r, d, u, v, and q
    else:

        #Remainder
        r = b % a

        #Quotient
        q = b // a

        #GCD, u and v assigned to the recursive EEA call
        d, u, v = EAA(r, a)
        return d, v - (q) * u, u


#Ints cleaned up
a = 20251854871379594235405083807725626809279735124563113008490969444717485505766726772707930366549369422613411801280325983886891104728535909893380141907287277976469334376179322483646241192364549489116573896598638791073162141467917484581478562093144603483983626058917401998071335320452617699014777368404297975378813885221405067529734456424079570500304517275576042297806513805884927920845385706674216132574256895853263461026983980352541289740896359127885685506208770702629536301203274202845321150468512464911322239610529382349997239265386342588817797852386964955150352716499841015630050055767016274138742773664518669806471
b = 13393003487295855552092869508975305243270557323061989087223468257149455422176226806777638639227377341493059265211131045036933580545130529193186285620521276787167089243467583061634942434743220843813175184234661375246584064929577351679197348676568370968061581079301418670749725090469388096800321761480711435989167119769655987176566801234660338210660113211608529355247337525771538801335004462976769202805737663328233229535662414473353408802085236727634569663677529539693996110829671412259405599214323596401633880110711650100894637685146090199413385825195891767738947950323438323786725310141554801844830154285581664262783
d, u, v = EAA(a,b)

#Prints & labels returned values
print(f'd = {d}')
print(f'u = {u}, v = {v}')