#g is base, a is power, m is mod
def fastPower(g, a, m):
 
    #initialize result
    result = 1

    #while the number is > 1
    while a > 0:

        #if power is odd, 
        if a % 2 == 1:
            result = (result * g) % m

        #Power is divided in half
        a = a // 2

        #Base becomes g^2 % m
        g = (pow(g,2,m))


    return result

#Calculates the remainder for g^a % m
num = fastPower(3,
8210362893450651574131722296757356605200830169356578785813400124279769149439910978373096453646242580531459663551160653545910334348552666782504383015485295983528828126564283854180931396360825706582998297884589389083806978918503471627935113458406773943290254539587711017833207101432555021658826604127820012290149767668421964181480358301946229699059111269938979219673218179864784421951340630600646783597540303343039608566703483740856368972704219205926958570459413034458778737766317296872902209677387193946108859253523419391287853604977223101353383075272228686446645520706511373820234488918043529860446112677987265442292451,
 8651150043557325511450175101264786208775439422974363414691402687392683861746580773721806086473253477983542928685674544395817565430568457148211874060064098116609018876257857579700449180736435635474749895342744349444036680156887905621835235579495131134575217730594952389382011952799251389314468124214188533713993324091003459409524165533378081003543628711099518702158186802468191072144929037113230109308430971997547998014513126712689350813090877776469762068452734380642840997344165805371355959356873719679719612070748538964773111805894015748080991812599330743417565437712641882372654734647375636810215509202840599416602729)

#Prints result of fastPower
print(num)

#Casts num into a string, and prints the sum of the digits
print(sum([int(digit) for digit in str(num)]))

